@model DataBaseLayer.Job_Detail

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="max-w-3xl mx-auto p-6">
        <div class="bg-white rounded-lg shadow-sm p-8">
            <!-- Title -->
            <h2 class="text-2xl font-semibold text-gray-800 mb-6">Job Details</h2>

            @Html.ValidationSummary(true, "", new { @class = "text-red-500 mb-4" })

            <!-- Job Title -->
            <div class="mb-6">
                @Html.LabelFor(m => m.JobTitle, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                @Html.EditorFor(m => m.JobTitle, new { htmlAttributes = new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", required = "required" } })
                @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Category and Type -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                    @Html.LabelFor(m => m.JobCategory, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                    @Html.DropDownListFor(m => m.JobCategory,
                        new List<SelectListItem> {
                            new SelectListItem { Text = "Select Category", Value = "" },
                            new SelectListItem { Text = "Technology", Value = "technology" },
                            new SelectListItem { Text = "Marketing", Value = "marketing" },
                            new SelectListItem { Text = "Finance", Value = "finance" },
                            new SelectListItem { Text = "Design", Value = "design" }
                        },
                        new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" })
                    @Html.ValidationMessageFor(m => m.JobCategory, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <div>
                    @Html.LabelFor(m => m.Worktype, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                    @Html.DropDownListFor(m => m.Worktype,
                        new List<SelectListItem> {
                            new SelectListItem { Text = "Select Type", Value = "" },
                            new SelectListItem { Text = "Full Time", Value = "full-time" },
                            new SelectListItem { Text = "Part Time", Value = "part-time" },
                            new SelectListItem { Text = "Contract", Value = "contract" },
                            new SelectListItem { Text = "Internship", Value = "internship" }
                        },
                        new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" })
                    @Html.ValidationMessageFor(m => m.Worktype, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>
            </div>

            <!-- Location and Work Type -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                    @Html.LabelFor(m => m.Location, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                    @Html.EditorFor(m => m.Location, new { htmlAttributes = new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" } })
                    @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <div>
                    @Html.LabelFor(m => m.Worktype, "Work Type", new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                    @Html.DropDownListFor(m => m.Worktype,
                        new List<SelectListItem> {
                            new SelectListItem { Text = "Select Work Type", Value = "" },
                            new SelectListItem { Text = "On-site", Value = "onsite" },
                            new SelectListItem { Text = "Remote", Value = "remote" },
                            new SelectListItem { Text = "Hybrid", Value = "hybrid" }
                        },
                        new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" })
                    @Html.ValidationMessageFor(m => m.Worktype, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>
            </div>

            <!-- Salary Range and Experience -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Salary Range (Annual)</label>
                    <div class="flex space-x-4">
                        @Html.EditorFor(m => m.SalaryMin, new { htmlAttributes = new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder = "Min" } })
                        @Html.EditorFor(m => m.SalaryMax, new { htmlAttributes = new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder = "Max" } })
                    </div>
                </div>

                <div>
                    @Html.LabelFor(m => m.ExperienceLevel, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                    @Html.DropDownListFor(m => m.ExperienceLevel,
                        new List<SelectListItem> {
                            new SelectListItem { Text = "Select Level", Value = "" },
                            new SelectListItem { Text = "Entry Level", Value = "entry" },
                            new SelectListItem { Text = "Mid Level", Value = "mid" },
                            new SelectListItem { Text = "Senior Level", Value = "senior" },
                            new SelectListItem { Text = "Executive", Value = "executive" }
                        },
                        new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" })
                    @Html.ValidationMessageFor(m => m.ExperienceLevel, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>
            </div>

            <!-- Description -->
            <div class="mb-6">
                @Html.LabelFor(m => m.Jobdescripton, "Job Description", new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                @Html.TextAreaFor(m => m.Jobdescripton, new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", rows = "6" })
                @Html.ValidationMessageFor(m => m.Jobdescripton, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Requirements -->
            <div class="mb-6">
                @Html.LabelFor(m => m.Reqirements, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                @Html.TextAreaFor(m => m.Reqirements, new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", rows = "4" })
                @Html.ValidationMessageFor(m => m.Reqirements, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Benefits -->
            <div class="mb-6">
                @Html.LabelFor(m => m.Benefits, new { @class = "block text-sm font-medium text-gray-700 mb-2" })
                @Html.TextAreaFor(m => m.Benefits, new { @class = "w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500", rows = "4" })
                @Html.ValidationMessageFor(m => m.Benefits, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Submit Button -->
            <div class="flex justify-end pt-6">
                <button type="submit" class="px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200">
                    Post Job
                </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
